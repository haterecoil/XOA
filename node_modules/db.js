db = module.exports = {
  mysql : require('mysql'),
  mySqlClient : null,
 
  connect : function () {
    this.mysql = require('mysql');
    this.mySqlClient = this.mysql.createConnection({
      host     : "localhost",
      port     : "8888",
      user     : "root",
      password : "root",
      database : "xoa-dev"
    });  
  },
 
  close : function() {
    this.mySqlClient.end();
  },
 
  executeSelectQuery : function( selectQuery, callbackResultFunction ) {
    this.mySqlClient.query(
      selectQuery,
      function select(error, results, fields) {
        if (error) {
          console.log(error);
          this.mySqlClient.end();
          return;
        }
   
        if ( results.length > 0 )  { 
          callbackResultFunction(results);
        } else {
          console.log("Pas de données");
        }
        this.mySqlClient.end();
    });
  },
// Cherche l'ID Max, puis crée une room avec IDMax +1 et roomName
  createRoom : function (roomName) {
    executeSelectQuery("SELECT Max(RoomID) FROM ROOMS", function(results, RoomName){
      executeSelectQuery("INSERT INTO ROOMS(RoomID, RoomName) values ('"+(results[0]+1)+"', '"+RoomName+"'", 
        function() {
        console.log("DB: room created " + results[0] );
        }
      );
    });
  },  

//Vérifie si la room "roomName" existe. 
//Si elle n'existe pas, appelle createRoom,
//Si elle existe, envoie les infos de la room à l'user
  checkIfRoom : function ( roomName ) {
    console.log("DB: checking if room "+roomName);
    this.roomQuery = "SELECT * FROM ROOMS WHERE RoomName = '"+roomName+"'";
    this.mySqlClient.query(
      this.roomQuery,
      function select(error, results, fields) {
        console.log("DB: results = "+results);
        if (error) {
          console.log("DB: "+error.stack);
          this.mySqlClient.end();
          return;
        }
   
        if ( results.length > 0 )  { 
          console.log("DB: room "+roomName+" exists already")
          getRoomInfo(roomName);
        } else {
          console.log("DB: "+roomName+" has yet to be created")
          createRoom(roomName);
        }
        this.mySqlClient.end();
    });
  },

//Récupère les informations d'une room donnée
//les envoie à l'utilisateur
  getRoomInfo : function (roomName) {
    console.log("DB: getting room "+roomName+" info");
  }
};